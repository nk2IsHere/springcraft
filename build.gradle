buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.71'
//    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.71'
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
//Aha. got it

apply plugin: 'kotlin-jpa'
apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
    mavenCentral()
//    maven { url = 'https://repo.spring.io/milestone' }
}

version = "1.0.0+0"
group = "eu.nk2.springcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "springcraft"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter"
    }
    implementation("org.springframework.boot:spring-boot-starter-security:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter"
    }
    implementation("org.springframework.boot:spring-boot-starter-webflux:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-json"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-validation"
    }
    implementation("org.springframework.boot:spring-boot-starter-validation:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter"
        exclude group: "org.hibernate.validator", module: "hibernate-validator"
    }
    implementation("org.hibernate.validator:hibernate-validator:6.0.18.Final") {
        exclude group: "com.fasterxml"
    }
    implementation("org.springframework.boot:spring-boot-starter-json:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter"
        exclude group: "com.fasterxml.jackson.datatype"
        exclude group: "com.fasterxml.jackson.module"
        exclude group: "com.fasterxml.jackson.core"
    }
    implementation("org.springframework.boot:spring-boot-starter:2.2.6.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    implementation ("org.springframework.boot:spring-boot-starter-logging:2.2.6.RELEASE") {
        exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
        exclude group: "org.slf4j", module: "jul-to-slf4j"
    }
    implementation "io.projectreactor.kotlin:reactor-kotlin-extensions:1.0.2.RELEASE"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.3.5"

    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.github.salomonbrys.kotson:kotson:2.5.0"
    implementation "joda-time:joda-time:2.10.1"
    implementation "com.github.debop:koda-time:2.0.0"
    implementation "io.jsonwebtoken:jjwt:0.9.0"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
